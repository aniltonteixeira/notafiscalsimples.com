{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projetos/notafiscalsimples.com/app/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport * as z from \"zod\"\n\nimport {\n  Form,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormMessage,\n} from \"@/components/ui/form\"\n\nimport { Input } from \"@/components/ui/input\"\nimport { Button } from \"@/components/ui/button\"\n\n// Validação com Zod\nconst formSchema = z.object({\n  email: z.string().email({ message: \"Email inválido\" }),\n  senha: z.string().min(6, { message: \"A senha precisa ter pelo menos 6 caracteres\" }),\n})\n\nexport default function LoginForm() {\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      email: \"\",\n      senha: \"\",\n    },\n  })\n\n  function onSubmit(values: z.infer<typeof formSchema>) {\n    console.log(\"Login:\", values)\n    // Aqui você pode chamar sua API\n  }\n\n  return (\n    <div className=\"max-w-sm mx-auto mt-20\">\n      <Form {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n          <FormField\n            control={form.control}\n            name=\"email\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Email</FormLabel>\n                <FormControl>\n                  <Input placeholder=\"seu@email.com\" {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <FormField\n            control={form.control}\n            name=\"senha\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Senha</FormLabel>\n                <FormControl>\n                  <Input type=\"password\" placeholder=\"••••••\" {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <Button type=\"submit\" className=\"w-full\">Entrar</Button>\n        </form>\n      </Form>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;AAJA;;;;;;;AAkBA,oBAAoB;AACpB,MAAM,aAAa,CAAA,GAAA,wLAAA,CAAA,SAAQ,AAAD,EAAE;IAC1B,OAAO,CAAA,GAAA,wLAAA,CAAA,SAAQ,AAAD,IAAI,KAAK,CAAC;QAAE,SAAS;IAAiB;IACpD,OAAO,CAAA,GAAA,wLAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,GAAG;QAAE,SAAS;IAA8C;AACpF;AAEe,SAAS;;IACtB,MAAM,OAAO,CAAA,GAAA,0PAAA,CAAA,UAAO,AAAD,EAA8B;QAC/C,UAAU,CAAA,GAAA,wQAAA,CAAA,cAAW,AAAD,EAAE;QACtB,eAAe;YACb,OAAO;YACP,OAAO;QACT;IACF;IAEA,SAAS,SAAS,MAAkC;QAClD,QAAQ,GAAG,CAAC,UAAU;IACtB,gCAAgC;IAClC;IAEA,qBACE,4TAAC;QAAI,WAAU;kBACb,cAAA,4TAAC;YAAM,GAAG,IAAI;sBACZ,cAAA,4TAAC;gBAAK,UAAU,KAAK,YAAY,CAAC;gBAAW,WAAU;;kCACrD,4TAAC;wBACC,SAAS,KAAK,OAAO;wBACrB,MAAK;wBACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,4TAAC;;kDACC,4TAAC;kDAAU;;;;;;kDACX,4TAAC;kDACC,cAAA,4TAAC;4CAAM,aAAY;4CAAiB,GAAG,KAAK;;;;;;;;;;;kDAE9C,4TAAC;;;;;;;;;;;;;;;;kCAKP,4TAAC;wBACC,SAAS,KAAK,OAAO;wBACrB,MAAK;wBACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,4TAAC;;kDACC,4TAAC;kDAAU;;;;;;kDACX,4TAAC;kDACC,cAAA,4TAAC;4CAAM,MAAK;4CAAW,aAAY;4CAAU,GAAG,KAAK;;;;;;;;;;;kDAEvD,4TAAC;;;;;;;;;;;;;;;;kCAKP,4TAAC;wBAAO,MAAK;wBAAS,WAAU;kCAAS;;;;;;;;;;;;;;;;;;;;;;AAKnD;GAnDwB;;QACT,0PAAA,CAAA,UAAO;;;KADE","debugId":null}}]
}